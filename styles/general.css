* {
  padding: 0;
  margin: 0;
  font-family: 'Ubuntu', sans-serif;
}

/******load projects with foreach. project containers can show how the project looks. description. github link*********/

body {
  height: 600px;
  background-image: url('/images/background_image.jfif');
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed;;
  margin-left: 220px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/***********Sidebar******
Open Sidebar with button in the top left corner
transition width 0 to whatever it currently is
Use Javascript to make addition section show up under projects when hovering. Sections are Automation projects and frontEnd projects
******/

.side-bar-container {
  color: white;
  background-color: black;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  width: 200px;
  padding-top: 20px;
  padding-left: 20px;
  font-family: 'Ubuntu', sans-serif;
  display: flex;
  flex-direction: column;
}

.side-bar:hover {
  background-color: gray;
}

.title, .home, .projects, .biography, .contact {
  padding-top: 6px;
  padding-bottom: 6px;
  padding-left: 6px;
}

.title {
  font-size: 28px;
  padding-bottom: 36px;
}

.home-name {
  display: inline;
}

/************TopBar*****************/

.top-bar-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: row;
  position: fixed;
  top: 0px;  
  right: 0px;
  width: auto;
  padding-top: 10px;
  padding-right: 10px;
}

.top-bar-name {
  font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
}

.top-bar-image-container {
  padding-left: 10px;
}

.home-profile-image {
  width: 50px;
  height: 50px;
  border-radius: 25px;
  object-fit: cover;
}

/*********Hero Section*************/

.content-container {
  width: 900px;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.content-title-container {
  display: flex;
}

.content-title {
  font-size: 30px;
  color: white;
}

.projects-button {
  background-color: transparent;
  position: relative;
  right: 0;
  padding-top: 14px;
  border: none;
  cursor: pointer;
}

.content-projects-container {
  display: flex;
  opacity: 0;
}

.is-showing {
  opacity: 1;
}


.content-projects-card {
  height: 300px;
  border-style: solid;
  border-color: black;
  background-color: rgb(160, 160, 160);
  border-radius: 10px;
  margin-right: 10px;
}

.content-contact-button-container {
}

.content-contact-button {
  font-size: 20px;
  cursor: pointer;
  margin-top: 30px;
  color: yellow;
  background-color: black;
  border: none;
  border-radius: 20px;
  padding: 10px;
}


/* Keep your existing CSS rules */

/* Add a media query to stack the content project sections vertically on smaller screens */
@media screen and (max-width: 600px) {
  .content-container {
    width: 100%; /* Adjust the width to take the full screen width */
  }

  .content-projects {
    flex-direction: column; /* Stack the content project sections vertically */
  }

  .content-testing-projects,
  .content-frontend-projects {
    width: 100%; /* Make them take the full width of the container */
    margin: 0; /* Remove any margin */
  }
}

/* Define the typing animation */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

/* Apply the animation to the content title */
.content-title {
  font-size: 30px;
  color: white;
  overflow: hidden; /* Hide overflowing text */
  white-space: nowrap; /* Prevent text from wrapping */
  animation: typing 5s steps(40) 1s 1 normal both, /* Typing effect */
             blink-caret 0.75s steps(1) infinite; /* Blinking cursor */
}

/* Define a blinking cursor animation */
@keyframes blink-caret {
  from, to {
    border-right: 2px solid transparent;
  }
  50% {
    border-color: white;
  }
}

/* Apply the animation to the projects button */
.projects-button {
  position: relative;
  right: 0;
  padding-top: 14px;
  animation: fadeIn 1s 6s ease-in-out both; /* Fade-in effect after typing */
}

/* Define a fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

